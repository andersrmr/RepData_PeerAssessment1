summary(auto.odds)
exp(-.25131)
exp(-0.03181)
head(shuttle)
ifelse(grepl("auto",shuttle$use,ignore.case=T),1,0)
ifelse(grepl("noauto",shuttle$use,ignore.case=T),0,1)
head(shuttle)
shuttle$use.num <- ifelse(grepl("noauto",shuttle$use,ignore.case=T),0,1)
head(shuttle)
head(shuttle,20)
shuttle[shuttle$use=="noauto",]
shuttle[shuttle$use=="auto",]
auto.odds <- glm(shuttle$use.num ~ factor(shuttle$wind), family="binomial")
summary(auto.odds)
exp(.03181)
exp(.03181)^-1
auto.odds <- glm(shuttle$use.num ~ factor(shuttle$wind)
+ factor(shuttle$magn), family="binomial")
summary(auto.odds)
exp(-.03201)
exp(-.03201)^-1
exp(.25131)
exp(.25131)^-1
auto.odds <- glm(shuttle$use.num ~ shuttle$wind, family="binomial")
summary(auto.odds)
wind2 <- relevel(shuttle$wind, "tail")
auto.odds <- glm(shuttle$use.num ~ shuttle$wind2, family="binomial")
summary(auto.odds)
auto.odds <- glm(shuttle$use.num ~ wind2, family="binomial")
summary(auto.odds)
exp(-.03181)
summary(auto.odds)$coeffs
summary(auto.odds)$coefficents
summary(auto.odds)$coefficients
summary(auto.odds)$coefficients[2]
exp(summary(auto.odds)$coefficients[2])
auto.odds <- glm(shuttle$use.num ~ wind2
+ shuttle$magn, family="binomial")
summary(auto.odds)$coefficients
summary(auto.odds)$coefficients[2]
exp(summary(auto.odds)$coefficients[2]) #0.969
summary(auto.odds)
auto.odds <- glm(1-shuttle$use.num ~ wind2, family="binomial")
summary(auto.odds)
auto.odds <- glm(shuttle$use.num ~ wind2, family="binomial")
summary(auto.odds)
exp(-.03181)
exp(.03181)
?Insectspray
?InsectSprays
head(InsectSprays)
str(InsectSprays)
glm1 <- glm(count ~ spray, family="poisson")
summary(glm1)
glm1 <- glm(count ~ spray, data = InsectSprays, family="poisson")
summary(glm1)
spray2 <- relevel(InsectSprays$count, "B")
glm2 <- glm(count ~ spray2, data = InsectSprays, family="binomial")
spray2 <- relevel(InsectSprays$spray, "B")
glm2 <- glm(count ~ spray2, data = InsectSprays, family="binomial")
spray2
glm2 <- glm(count ~ spray2, data = InsectSprays, family="poisson")
summary(glm2)
glm3 <- glm(count ~ spray2 + log(10), data = InsectSprays, family = poisson)
lm3 <- glm(count ~ spray2 + offset(log(10)),
data = InsectSprays, family = poisson)
exp(-.05588)
glm3 <- glm(count ~ spray2*10,
data = InsectSprays, family = poisson)
glm3 <- glm(count ~ spray2,
data = InsectSprays, offset=log(10), family = poisson)
glm3 <- glm(count ~ spray2,
data = InsectSprays, offset=log(10), family = "poisson")
glm2 <- glm(count ~ spray2, data = InsectSprays, family="poisson")
glm3 <- glm(count ~ spray2,
data = InsectSprays, offset=log(10), family = "poisson")
glm3 <- glm(count ~ spray2,
data = InsectSprays, offset=10, family = "poisson")
log(10)
str(InsectSprays)
head(InsectSprays)
glm3 <- glm(count ~ spray2 + log(10),
data = InsectSprays, family = "poisson")
?glm
glm3 <- glm(count ~ spray2, offset=rep(log(10, 72))
data = InsectSprays, family = "poisson")
glm3 <- glm(count ~ spray2, offset=rep(log(10), 72)
data = InsectSprays, family = "poisson")
glm3 <- glm(count ~ spray2, offset=rep(log(10), 72),
data = InsectSprays, family = "poisson")
summary(glm3)
glm2 <- glm(count ~ spray2, data = InsectSprays, family="poisson")
summary(glm2)
summary(glm2)$coefficients      #-0.9457
glm3 <- glm(count ~ spray2, offset=rep(log(10), 72),
data = InsectSprays, family = "poisson")
summary(glm3)
summary(glm3)$coefficients
glm2 <- glm(count ~ spray2, data = InsectSprays, family="poisson")
summary(glm2)
summary(glm2)$coefficients      #-0.9457
summary(glm3)$coefficients
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
x
knot <- 0
splineTerms <- sapply(knots, function(knot) (x>knot*(x-knot)))
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
knots <- 0
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
xMat
summary(lm(y~xMat-1))$coefficients
yhat <- predict(lm(y~xMat-1))
plot(x,y)
lines(x,yhat)
b <- c(140,138,150,148,135)
a <- c(132,135,151,146,130)
?t.test
t.test(a,b,alternative="two-sided",paired=TRUE)
t.test(a,b,alternative="two.sided",paired=TRUE)
1-.05/2
1100 + c(-1,1)*qt(8,.975)*10
?qt
1100 + c(-1,1)*qt(.975,8)*10
?binomial.test
?binom.test
binom.test(3,4,alternative="l")
binom.test(3,4,alternative="g")
?poisson.test
10/1787
1/100
poisson.test(10,1787,.01,alternative="l")
?t.test
sp <- sqrt(0.5*1.5*1.5 + 0.5*1.8*1.8))
-3-1 + c(-1,1)*qt(0.975,16)*sp*sqrt(2/9)
sp <- sqrt(0.5*1.5*1.5 + 0.5*1.8*1.8)
-3-1 + c(-1,1)*qt(0.975,16)*sp*sqrt(2/9)
?t.test
qt(0.975,16)
-4/(sp*sqrt(2/9))
1-0.05/2
.05/2
qt(.05/2,16)
qt(0.01/2,16)
1-.1/2
1-.05/2
?pnorm
sp <- sqrt(0.5*12*12 + 0.5*12*12)
(44-42.04)/sp/sqrt(288)
pnorm(.0096,)
.05^10
.05*10
d <- read.csv("activity.csv",header=TRUE)
setwd("C:/Users/Admin/RepResr/RepData_PeerAssessment1")
d <- read.csv("activity.csv",header=TRUE)
s <- split(d,d$interval)
interval <- d[d$date=="2012-10-01","interval"]
activity <- sapply(s, function(x) mean(x[,1],na.rm=TRUE))
plot(interval,activity,type="l")
max(activity) # I
names(max(activity))
?max
max(activity)
which.max(activity)
activity(104)
activity[104]
activity[835]
length(activity)
?which
?which.max
head(activity)
head(d)
head(s)
head(d)
head(activity)
class(activity)
names(activity[1])
names(activity[2])
names(activity[5])
class(names(activity[5]))
head(d)
activity[1]
activity$0
as.list|(activity$0)
as.list|(activity$"0")
?as.list
activity.ls <- sapply(s, function(x) mean(x[,1],na.rm=TRUE))
activity.ls <- lapply(s, function(x) mean(x[,1],na.rm=TRUE))
activity.ls$0
activity.ls$"0'
activity.ls$"0"
str(activity.ls)
activity.ls$0
activity.ls$725
activity.ls$"725"
activity.ls$"0"
activity.ls$"5"
head(d)
activity.ls$"d$interval[1]"
unique(d$date)
rep(activity,61)
?rep
fill <- rep(activity,61)
class(fill)
head(fill)
names(ss)
names(s)
str(names(s))
?gl
gl(288,61,names(s))
gl(288,61,labels=names(s))
s
head(fill)
?rep
fill <- rep(activity,each=61)
lengh(fill)
length(fill)
head(fil)
head(fill)
length(activity)
288*61
is.na(d$steps)
fill(is.na(d$steps))
fill[is.na(d$steps)]
st <- c(NA,1:3)
st
is.na(st)
fil <- 5:8
fil
fil[!is.na(st)]
fill <- rep(activity,each=61)
if (st[1]=="NA") fil[1]<- 200
if (st[1]==NA) fil[1]<- 200
st
st[1]
class(st)
class(d$steps)
if (st[1]=NA) fil[1]<- 200
if (st[1]==NA) fil[1]<- 200
if (is.na(st[1]) fil[1]<- 200
is.na(st[1])
!is.na(st[1])
is.na(st[2])
if (is.na(st[1])) fil[1]<- 200
fil
d$steps
activity
class(ativity)
class(activity)
steps.fill <- numeric(length(d$steps))
}
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i]<- fill[i]
} else {
steps.fill[i] <- NA
}
}
head(steps.fill)
d$steps
head(d$steps)
head(d)
fill <- rep(activity,61)
steps.fill <- numeric(length(d$steps))
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i]<- fill[i]
} else {
steps.fill[i] <- NA
}
}
head(steps.fill)
head(d$interval)
head(activity)
d[d$date=="2012-10-=01"]
d[d$date=="2012-10-=01",]
d[d$date=="2012-10-=01",]
d[d$date=="2012-10-01",]
tail(d)
d[d$date=="2012-11-30",]
d[d$date=="2012-11-29",]
d.fill <- data.frame(d,steps.fill)
d.fill[d.fill$date=="2012-11-29",]
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i]<- fill[i]
}
}
d.fill <- data.frame(d,steps.fill)
d.fill[d.fill$date=="2012-11-29",]
d.fill[d.fill$date=="2012-11-29",]
fill <- rep(activity,61)
fill
steps.fill <- numeric(length(d$steps))
steps.fil
steps.fill
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i]<- fill[i]
}
}
steps.fill
d.fill <- data.frame(d,steps.fill)
d.fill[d.fill$date=="2012-11-29",]
d.fill[d.fill$date=="2012-11-28",]
d.fill[d.fill$date=="2012-11-27",]
d.fill[d.fill$date=="2012-10-01",]
d(head)
head(d)
head(d.fill)
s <- split(d,d$date)
hist(sapply(s, function(x) sum(x[,1],na.rm=TRUE)),main="Total number of steps taken each day")
s <- split(d.fill,d.fill$date)
hist(sapply(s, function(x) sum(x[,4],na.rm=TRUE)),main="Total number of steps taken each day (Inputed missing values)")
sum(d.fill[d.fill$date=="012-10-01",1,na.rm=TRUE])
sum(d.fill[d.fill$date=="012-10-01",1],na.rm=TRUE)
sum(d.fill[d.fill$date=="012-10-01",4],na.rm=TRUE)
sum(d.fill[d.fill$date=="12-10-01",4],na.rm=TRUE)
sum(d.fill[d.fill$date=="2012-10-01",4],na.rm=TRUE)
sum(d.fill[d.fill$date=="2012-10-01",1],na.rm=TRUE)
s <- split(d,d$date)
hist(sapply(s, function(x) sum(x[,1],na.rm=TRUE)),main="Total number of steps taken each day")
hist(sapply(s, function(x) sum(x[,4],na.rm=TRUE)),main="Total number of steps taken each day (Inputed missing values)")
s <- split(d.fill,d.fill$date)
s <- split(d.fill,d.fill$date)
hist(sapply(s, function(x) sum(x[,1],na.rm=TRUE)),main="Total number of steps taken each day")
hist(sapply(s, function(x) sum(x[,4],na.rm=TRUE)),main="Total number of steps taken each day (Inputed missing values)")
sapply(s, function(x) sum(x[,1],na.rm=TRUE)),main="Total number of steps taken each day"
sapply(s, function(x) sum(x[,1],na.rm=TRUE))
sapply(s, function(x) sum(x[,4],na.rm=TRUE))
sum(d.fill[d.fill$date=="2012-10-02",1],na.rm=TRUE)
sum(d.fill[d.fill$date=="2012-10-02",4],na.rm=TRUE)
d.fill[d.fill$date=="2012-10-02",4]
fill <- rep(activity,61)
length(d.fill[d.fill$date=="2012-10-02",4])
fill[289]
fill[289:310]
fill[285:310]
fill[1]
fill[289]
#This loop fills in NAs with mean for each interval
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i]<- fill[i]
}
}
steps.fill[1]
steps.fill[289]
steps.fill[290]
steps.fill[291]
steps.fill[288]
steps.fill[287]
fill[289]
steps.fill <- numeric(length(d$steps))
steps.fill[289]
steps.fill[288]
length(d$steps)
is.na(d$steps[289])
class(fill)
class(steps.fill)
steps.fill <- numeric(length(d$steps))
#This loop fills in NAs with mean for each interval
for (i in 1:length(d$steps)) {
if (is.na(d$steps[i])) {
steps.fill[i] <- fill[i]
} else {
steps.fill[i] <- d$steps[i]
}
}
d.fill <- data.frame(d,steps.fill) #new filled data.frame
s <- split(d.fill,d.fill$date)
hist(sapply(s, function(x) sum(x[,4],na.rm=TRUE)),main="Total number of steps taken each day (Inputed missing values)")
mean(sapply(s, function(x) sum(x[,4],na.rm=TRUE)))
median(sapply(s, function(x) sum(x[,4],na.rm=TRUE)))
weekdays(unique(d.fill$date))
weekdays(as.character(unique(d.fill$date)))
?weekdays
str(d.fil)
str(d.fil)
str(d.fill)
unique(d.fill$date)
as.character(unique(d.fill$date))
weekdays(as.character(unique(d.fill$date)))
as.Date(unique(d.fill$date))
weekdays(as.Date(unique(d.fill$date)))
class(weekdays(as.Date(unique(d.fill$date))))
?weekend
??weekend
head(d.fill)
weekdays(as.Date(unique(d.fill$date)))
?|
wknd <- numeric(length(d.fill$steps))
for (i in 1:length(d.fill$steps)) {
if (weekdays(as.Date(d.fill$date[i]=="Saturday" |
weekdays(as.Date(d.fill$date[i]=="Sunday") {
wknd[i] <- 1
} else {
wknd[i] <- 0
}
}
wknd <- numeric(length(d.fill$steps))
for (i in 1:length(d.fill$steps)) {
if (weekdays(as.Date(d.fill$date[i]))=="Saturday" |
weekdays(as.Date(d.fill$date[i]))=="Sunday") {
wknd[i] <- 1
} else {
wknd[i] <- 0
}
}
d.fill.wknd <- data.frame(d.fill,as.factor(wknd))
head(d.fill.wknd)
class(d.fill.wknd$as.factor.wknd)
d.fill.wknd[d.fill.wknd$date=="2012-10-06",]
d.fill.wknd[d.fill.wknd$date=="2012-10-05",]
d.fill.wknd[d.fill.wknd$date=="2012-10-07",]
d.fill.wknd[d.fill.wknd$date=="2012-10-08",]
head(d.fill.wknd)
wknd <- character(length(d.fill$steps))
for (i in 1:length(d.fill$steps)) {
if (weekdays(as.Date(d.fill$date[i]))=="Saturday" |
weekdays(as.Date(d.fill$date[i]))=="Sunday") {
wknd[i] <- "weekend"
} else {
wknd[i] <- "weekday"
}
}
d.fill.wknd <- data.frame(d.fill,as.factor(wknd))
head(d.fill.wknd)
s <- split(d.fill.wknd,d.fill.wknd$interval)
activity.fill <- sapply(s, function(x) mean(x[,4],na.rm=TRUE))
xplot(activity.fill ~ interval | as.factor.wknd, d.fill.wknd )
xyplot(activity.fill ~ interval | as.factor.wknd, d.fill.wknd )
library(lattice)
xyplot(activity.fill ~ interval | as.factor.wknd, data = d.fill.wknd )
xyplot(activity.fill ~ interval | as.factor.wknd., data = d.fill.wknd )
interval
d.fill.wknd[d.fill.wknd$date=="2012-10-06",]
activity.fill
12*24
2355/288
s
s$'s355'
s$'2355'
class(s$'2355')
s$'2355'[s$'2355'$as.factor.wknd.="weekend"]
s$'2355'[s$'2355'$as.factor.wknd.=="weekend"]
s$'2355'[s$'2355'$as.factor.wknd.=="weekend",4]
s$'2355'[s$'2355'$as.factor.wknd.=="weekday",4]
library(datasets)
head(airquality)
activity.fill.wkdy <- sapply(s, function(x)
mean(x[x$as.factor.wknd.=="weekday",4]))
activity.fill.wknd <- sapply(s, function(x)
mean(x[x$as.factor.wknd.=="weekend",4]))
activity.fill.wkdy
activity.fill.wknd
?gl
gl(2,2355,labels=c("weekday","weekend"))
activity.fill.wknd
length(activity.fill.wknd)
gl(2,288,labels=c("weekday","weekend"))
2*288
?rep
rep(interval,2)
gl(2,288,labels=c("weekday","weekend"))
#Create data frame with weekday vs. weekend activity pattern mean data
weekend <- gl(2,288,labels=c("weekday","weekend"))
activity.fill.sp <- c(activity.fill.wkdy,activity,fill.wknd)
activity.wk <- data.frame(activity.fill.sp,rep(interval,2),weekend)
#Create panel plot using lattice
activity.fill.sp <- c(activity.fill.wkdy,activity.fill.wknd)
activity.wk <- data.frame(activity.fill.sp,rep(interval,2),weekend)
head(activity.wk)
str(activity.wk)
2*288
activity.wk
activity.fill.spl <- c(activity.fill.wkdy,activity.fill.wknd)
activity.wk <- data.frame(activity.fill.spl,rep(interval,2),weekend)
head(activity.wk)
names(activity.wk) <- c("activity","interval","weekend")
head(activity.wk)
xyplot(activity ~ interval | weekend, data = activity.wk )
xyplot(activity ~ interval | weekend, data = activity.wk,type="l" )
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(2,1))
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(1,2))
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(1,2),ylabel="Number of steps")
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(1,2),ylab="Number of steps")
```
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(1,2),ylab="Number of steps")
xyplot(activity ~ interval | weekend, data = activity.wk,type="l",
layout=c(1,2),ylab="Number of steps",xlab="Interval")
knit2html(ReprRes_proj1)
library(knitr)
knit2html(ReprRes_proj1)
knit2html(ReprRes_proj1.Rmd)
knit2html("ReprRes_proj1")
knit2html()
knit2html("ReprRes_proj1")
knit2html('ReprRes_proj1')
knit2html("ReprRes_proj1.RMD")
max.activity
which.max(activity)
names(which.max(activity))
knit2html("PA1_template.Rmd")
?median
knit2html("PA1_template.Rmd")
